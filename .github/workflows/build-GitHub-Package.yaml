name: Build and Deploy AJAX Application

on:
  release:
    types: [created]
    tags:
      - '*'

jobs:
  build-and-publish:
    runs-on: windows-latest

    env:
      PROJECT_NAME: NetGitHubActions-POC      
      #TAG_NAME: ${{ github.ref.split('/')[2] }}

    steps:
      - name: Set Version Variable
        if: ${{ github.ref_type == 'tag' }}
        env:
            TAG: ${{ github.ref_name }}
        run: |
            echo "VERSION1=${TAG#v}" >> $GITHUB_ENV
            echo "VERSION1=${TAG#v}" >> $GITHUB_OUTPUT            
            echo "VERSION3=${{ github.ref.split('/')[2] }}" >> $GITHUB_ENV
            echo "VERSION3=${{ github.ref.split('/')[2] }}" >> $GITHUB_OUTPUT            

      - name: Create annotation for build error
        run: echo "::error file=app.js,line=1::Missing semicolon"

      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v1

      - name: Restore NuGet packages
        run: nuget restore ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -PackagesDirectory packages
        env:
          TELERIK_USERNAME: ${{ secrets.MyTelerikAccountUsername }}
          TELERIK_PASSWORD: ${{ secrets.MyTelerikAccountPassword }}
          NUGET_USER: ${{ github.actor }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Build the solution
        run: |
            msbuild ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj /p:Configuration=Release
        env:
          PROJECT_DIR: ${{ env.PROJECT_NAME }}
          BUILD_CONFIG: Release

      - name: Create NuGet package
        run: |
            nuget pack ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -Prop Configuration=Release -Version ${{ env.NUGET_VERSION }}
            Copy-Item -Path "$($env:PROJECT_NAME).$($env:NUGET_VERSION).nupkg" -Destination "$($env:GITHUB_WORKSPACE)/$($env:PROJECT_NAME).$($env:NUGET_VERSION).nupkg"
        env:
          BUILD_ARTIFACTS: ${{ env.PROJECT_NAME }}/bin/Release
          NUGET_VERSION: ${{ github.ref.replace('refs/tags/', '') }}

      #- name: Create NuGet package
      #  run: nuget pack ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -Prop Configuration=Release -Version ${{ env.NUGET_VERSION }}
      #  env:
      #      BUILD_ARTIFACTS: ${{ env.PROJECT_NAME }}/bin/Release
      #      NUGET_VERSION: ${{ github.ref }}

      #- name: Copy NuGet package to release files
      #  run: cp ${{ env.PROJECT_NAME }}.${{ env.NUGET_VERSION }}.nupkg ${{ github.workspace }}/releases/${{ env.PROJECT_NAME }}.${{ env.NUGET_VERSION }}.nupkg

      - name: Publish NuGet package
        if: github.event_name == 'release' && startsWith(github.ref, 'v')
        run: nuget push ${{ env.PROJECT_NAME }}.${{ env.NUGET_VERSION }}.nupkg -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
            NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
