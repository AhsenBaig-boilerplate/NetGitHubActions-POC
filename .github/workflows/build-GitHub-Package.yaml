name: Build and Deploy AJAX Application

on:
  release:
    types: [created]
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      build_deploy_choice:
          description: 'Build, Deploy or Both'
          required: true
          default: 'build_deploy' 
          type: choice
          options:
          - build_only
          - deploy_only
          - build_deploy

jobs:
  build-and-publish:
    runs-on: windows-latest

    env:
      PROJECT_NAME: NetGitHubActions-POC

     if: ${{ github.ref_type == 'tag' }}
    steps:
      - name: Transform Tag
        run: |
          $tag = $env:GITHUB_REF.Replace("refs/tags/", "")
          # -replace '[^0-9\.]',''
          $nuget_version = "v" + $tag -replace '[^\d\.a-zA-Z]',''
          "NUGET_VERSION=$nuget_version" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Print NuGet-Compatible Version
        run: echo "NuGet-Compatible Version:${{ env.NUGET_VERSION }}"

      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v1

      - name: Restore NuGet packages
        run: nuget restore ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -PackagesDirectory packages
        env:
          TELERIK_USERNAME: ${{ secrets.MyTelerikAccountUsername }}
          TELERIK_PASSWORD: ${{ secrets.MyTelerikAccountPassword }}
          NUGET_USER: ${{ github.actor }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Build the solution
        run: |
            msbuild ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj /p:Configuration=Release
        env:
          PROJECT_DIR: ${{ env.PROJECT_NAME }}
          BUILD_CONFIG: Release

      - name: Create NuGet package
        run: |
            nuget pack ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -Prop Configuration=Release -Version ${{ env.NUGET_VERSION }}
            Copy-Item -Path "$($env:PROJECT_NAME).$($env:NUGET_VERSION).nupkg" -Destination "$($env:GITHUB_WORKSPACE)/$($env:PROJECT_NAME).$($env:NUGET_VERSION).nupkg"
        env:
          BUILD_ARTIFACTS: ${{ env.PROJECT_NAME }}/bin/Release

      - name: Publish NuGet package
        if: github.event_name == 'release' && startsWith(github.ref, 'v')
        run: nuget push ${{ env.PROJECT_NAME }}.${{ env.NUGET_VERSION }}.nupkg -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
            NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

